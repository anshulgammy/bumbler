package nerd.utopian.moviesmart.metadata;

import java.util.Objects;
import java.util.StringJoiner;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

@Entity
@Table(name = "TBL_MOVIES")
public class MovieMetadata {

  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  private Long id;

  private String title;
  private String genre;
  private String director;
  private String actors;
  private String year;
  // Runtime is in minutes
  private Long runtime;
  private Double rating;
  private Long votes;
  // Revenue is in Millions
  private Double revenue;
  private Long metaScore;

  protected MovieMetadata(Long id, String title, String genre, String director, String actors,
      String year, Long runtime, Double rating, Long votes, Double revenue, Long metaScore) {
    this.id = id;
    this.title = title;
    this.genre = genre;
    this.director = director;
    this.actors = actors;
    this.year = year;
    this.runtime = runtime;
    this.rating = rating;
    this.votes = votes;
    this.revenue = revenue;
    this.metaScore = metaScore;
  }

  public MovieMetadata() {

  }

  // region Getters and setters -- generated by BoB the Builder of Beans
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = (id);
  }

  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = (title);
  }

  public String getGenre() {
    return genre;
  }

  public void setGenre(String genre) {
    this.genre = (genre);
  }

  public String getDirector() {
    return director;
  }

  public void setDirector(String director) {
    this.director = (director);
  }

  public String getActors() {
    return actors;
  }

  public void setActors(String actors) {
    this.actors = (actors);
  }

  public String getYear() {
    return year;
  }

  public void setYear(String year) {
    this.year = (year);
  }

  public Long getRuntime() {
    return runtime;
  }

  public void setRuntime(Long runtime) {
    this.runtime = (runtime);
  }

  public Double getRating() {
    return rating;
  }

  public void setRating(Double rating) {
    this.rating = (rating);
  }

  public Long getVotes() {
    return votes;
  }

  public void setVotes(Long votes) {
    this.votes = (votes);
  }

  public Double getRevenue() {
    return revenue;
  }

  public void setRevenue(Double revenue) {
    this.revenue = (revenue);
  }

  public Long getMetaScore() {
    return metaScore;
  }

  public void setMetaScore(Long metaScore) {
    this.metaScore = (metaScore);
  }// endregion Getters and setters

  // region hashCode() and equals() -- generated by BoB the Builder of Beans
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }

    MovieMetadata that = (MovieMetadata) o;

    return Objects.equals(this.getId(), that.getId()) && Objects.equals(this.getTitle(),
        that.getTitle()) && Objects.equals(this.getGenre(), that.getGenre()) && Objects.equals(
        this.getDirector(), that.getDirector()) && Objects.equals(this.getActors(),
        that.getActors()) && Objects.equals(this.getYear(), that.getYear()) && Objects.equals(
        this.getRuntime(), that.getRuntime()) && Objects.equals(this.getRating(), that.getRating())
        && Objects.equals(this.getVotes(), that.getVotes()) && Objects.equals(this.getRevenue(),
        that.getRevenue()) && Objects.equals(this.getMetaScore(), that.getMetaScore());
  }

  @Override
  public int hashCode() {
    return Objects.hash(getId(), getTitle(), getGenre(), getDirector(), getActors(), getYear(),
        getRuntime(), getRating(), getVotes(), getRevenue(), getMetaScore());
  }// endregion hashCode() and equals()

  // region toString() -- generated by BoB the Builder of Beans
  @Override
  public String toString() {
    return new StringJoiner(", ", this.getClass().getSimpleName() + "{", "}")
        .add("id=" + getId())
        .add("title=" + getTitle())
        .add("genre=" + getGenre())
        .add("director=" + getDirector())
        .add("actors=" + getActors())
        .add("year=" + getYear())
        .add("runtime=" + getRuntime())
        .add("rating=" + getRating())
        .add("votes=" + getVotes())
        .add("revenue=" + getRevenue())
        .add("metaScore=" + getMetaScore())
        .toString();
  }// endregion toString()

  // region Builder -- generated by BoB the Builder of Beans
  public static MovieMetadata.Builder builder() {
    return new MovieMetadata.Builder();
  }

  public static MovieMetadata.Builder builder(MovieMetadata data) {
    return new MovieMetadata.Builder(data);
  }

  public static final class Builder {

    private Long id;
    private String title;
    private String genre;
    private String director;
    private String actors;
    private String year;
    private Long runtime;
    private Double rating;
    private Long votes;
    private Double revenue;
    private Long metaScore;

    private Builder() {
    }

    private Builder(MovieMetadata initialData) {
      this.id = initialData.id;
      this.title = initialData.title;
      this.genre = initialData.genre;
      this.director = initialData.director;
      this.actors = initialData.actors;
      this.year = initialData.year;
      this.runtime = initialData.runtime;
      this.rating = initialData.rating;
      this.votes = initialData.votes;
      this.revenue = initialData.revenue;
      this.metaScore = initialData.metaScore;
    }

    public Builder setId(Long id) {
      this.id = id;
      return this;
    }

    public Builder setTitle(String title) {
      this.title = title;
      return this;
    }

    public Builder setGenre(String genre) {
      this.genre = genre;
      return this;
    }

    public Builder setDirector(String director) {
      this.director = director;
      return this;
    }

    public Builder setActors(String actors) {
      this.actors = actors;
      return this;
    }

    public Builder setYear(String year) {
      this.year = year;
      return this;
    }

    public Builder setRuntime(Long runtime) {
      this.runtime = runtime;
      return this;
    }

    public Builder setRating(Double rating) {
      this.rating = rating;
      return this;
    }

    public Builder setVotes(Long votes) {
      this.votes = votes;
      return this;
    }

    public Builder setRevenue(Double revenue) {
      this.revenue = revenue;
      return this;
    }

    public Builder setMetaScore(Long metaScore) {
      this.metaScore = metaScore;
      return this;
    }

    public MovieMetadata build() {
      return new MovieMetadata(id, title, genre, director, actors, year, runtime, rating, votes,
          revenue, metaScore);
    }
  }// endregion Builder
  // endregion Constructor, getters, setters, equals, hashCode, toString, builder
}
